<?php

namespace App\Http\Models;

use App\Http\Cart\ItemInterface;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

/**
 * Classe qui va stocker mes requetes autoirs
 * de ma table movies
 * Hérite de ma super classe Model.
 */
class Movies extends Model implements ItemInterface
{
    protected $fillable = ['title', 'description', 'categories_id'];

    /**
     * Décrit le nom de la table
     * que classe fait référence.
     */
    protected $table = 'movies';

    /**
     *  Retourne tous les films.
     */
    public function getAllMovies()
    {
        return DB::table('movies')->get();
    }

    /**
     * Return moyenne des notes de presse.
     */
    public function getAvgNotePresse()
    {
        $result = DB::table('movies')
                ->select(DB::raw('ROUND(AVG(note_presse)) as avgpress'))
                ->first();

        return $result;
    }

    /***************************************************** Relationships ***********************************************************/

    /**
     * Retourne la catégorie à laquelle appartient un objet film
     * Many To One : n..1.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function categories()
    {
        return $this->belongsTo('App\Http\Models\Categories');
    }

    /**
     * belongsToMany(): Many To Many.
     */
    public function user()
    {
        return $this->belongsToMany('App\Http\Models\User', 'user_favoris', 'movies_id', 'user_id');
    }

    /**
     * belongsToMany(): Many To Many.
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsToMany
     */
    public function actors()
    {
        return $this->belongsToMany('App\Http\Models\Actors');
    }

    public function directors()
    {
        return $this->belongsToMany('App\Http\Models\Directors');
    }

    public function comments()
    {
        return $this->hasMany('App\Http\Models\Comments');
    }

    public function sessions()
    {
        return $this->hasMany('App\Http\Models\Sessions');
    }

    public function recommandations()
    {
        return $this->hasMany('App\Http\Models\Recommandations');
    }

    /**
     * @param ItemInterface $item
     */
    public function add(ItemInterface $item)
    {
    }

    /**
     * @param ItemInterface $item
     */
    public function remove(ItemInterface $item)
    {
        // TODO: Implement remove() method.
    }
}

